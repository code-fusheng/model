<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.fusheng.model.core.mapper.CommentMapper">


    <!--  分页查询评论列表  -->
    <select id="getCommentList" resultType="xyz.fusheng.model.core.vo.CommentVo"
            parameterType="xyz.fusheng.model.common.utils.Page">
        select
        c.*, su.username, su.header
        from m_comment as c left join sys_user as su on c.comment_user_id = su.user_id
        <where>
        <if test="params.commentType!=null">
            and c.comment_type = #{params.commentType}
        </if>
        <if test="params.commentTarget!=null">
            and c.comment_target = #{params.commentTarget}
        </if>
        <if test="params.commentTime!=null">
            and c.comment_time between #{params.commentTime[0],jdbcType=TIMESTAMP} and
            #{params.commentTime[1],jdbcType=TIMESTAMP}
        </if>
        </where>
        <if test="sortColumn!=null and sortColumn!=''">
            order by ${sortColumn} ${sortMethod}
        </if>
        limit #{index}, #{pageSize}

    </select>
    <!--  分页查询统计总数  -->
    <select id="getCountByPage" resultType="java.lang.Integer" parameterType="xyz.fusheng.model.common.utils.Page">
        select count(*)
        from m_comment as c left join sys_user as su on c.comment_user_id = su.user_id
        <where>
        <if test="params.commentType!=null">
            and c.comment_type = #{params.commentType}
        </if>
        <if test="params.commentTarget!=null">
            and c.comment_target = #{params.commentTarget}
        </if>
        </where>

    </select>
    <!--  根据id获取对象内容字段  -->
    <select id="getCommentContentById" resultType="java.lang.String" parameterType="java.lang.Long">
        select comment_content from m_comment where comment_id = #{commentId}
    </select>

    <!--  查询评论视图对象  -->
    <select id="getCommentVoById" resultType="xyz.fusheng.model.core.vo.CommentVo">
        select c.*, su1.username, su1.header, su2.username as commentParentUserName
        from m_comment as c left join sys_user as su1 on c.comment_user_id = su1.user_id
        left join sys_user as su2 on c.comment_parent_user_id = su2.user_id
        where c.comment_id = #{params.commentId}
    </select>

</mapper>
